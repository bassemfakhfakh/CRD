<AML>
 <Item type="Method" id="B52E5D79470C4B08A8C2A90837FAFA58" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[//System.Diagnostics.Debugger.Break();


Innovator inn = this.getInnovator();
string strRelTypeNameRefLink = "";
string strTextRefLink = "";
for(int j=0; j<this.getItemCount();++j)
{
	Item item = this.getItemByIndex(j);
	string strItemType = item.getType();
	string idItemId = item.getID();
	if(strItemType == "MSO_DocumentType")
	  strRelTypeNameRefLink = "MSO_DocumentType Reference";
	else if(strItemType == "MSO_EmailDocumentType")
	  strRelTypeNameRefLink = "MSO_EmailDocType Reference";
	else
	  continue;
    item.setProperty("property_mapping","Click to view mappings");    
	strTextRefLink = "";
	try
	{
	  item = item.fetchRelationships(strRelTypeNameRefLink,"related_id(label)");
	  if( item == null )
	    throw new Exception( "fetchRelationships returns null");
	  else if( item.isError() )
	    throw new Exception(string.Format( "Request to find item of type '{0}' has failed: {1}", 
	      strRelTypeNameRefLink, item.getErrorDetail() ));
	      
	  Item refs = item.getRelationships(strRelTypeNameRefLink);
	  for(int i=0;i<refs.getItemCount();++i)
	  {
	  	Item refItem = refs.getItemByIndex(i).getRelatedItem();
	  	if(refItem != null)
	  	{
	      string label = refItem.getProperty("label","");
	      if(!string.IsNullOrEmpty(label))
	        strTextRefLink += label + ",";
	    }
	  }
	  strTextRefLink = strTextRefLink.TrimEnd(',');
	
	
	}
	catch(Exception ex)
	{
	  strTextRefLink = ex.Message; 
	}
    item.setProperty("valid_linked_items",strTextRefLink);    
}
return this;]]></method_code>
  <method_type>C#</method_type>
  <name>MSO_OnGetDocumentType</name>
 </Item>
</AML>