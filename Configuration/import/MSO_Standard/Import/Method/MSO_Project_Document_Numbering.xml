<AML>
 <Item type="Method" id="AEBFE8083D7B4CF9A4B8D2B5038167B0" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[string val = "";

try
{
	string linkItemTypeName = this.getProperty("mso_linkItemType", "");	
	string linkItemId = this.getProperty("mso_linkItemId", "");
	
	//supporting any ItemType that has item_number property in it (like Part)
	if (!string.IsNullOrEmpty(linkItemTypeName) && !string.IsNullOrEmpty(linkItemId))
	{
		Item itm = this.getInnovator().newItem(linkItemTypeName, "get");
		itm.setID(linkItemId);
		itm = itm.apply();
		string item_number = itm.getProperty("project_number", "");
		
		if (!string.IsNullOrEmpty(item_number))
		{
			int c = 1;
			string newDocumentNumber;
			do 
			{
				newDocumentNumber = item_number + "-DOC-" + c.ToString();
				itm = this.getInnovator().newItem("Document", "get");
				itm.setProperty("item_number", newDocumentNumber);
				itm = itm.apply();
				++c;
			}
			while (!itm.isError());
			val = newDocumentNumber;
		}
	}
}
catch(Exception)
{
}

if (string.IsNullOrEmpty(val))
{
	try
	{
		val = CCO.DB.InnDatabase.GetNextSequenceValue("name", "Default Document");
		if(String.IsNullOrEmpty(val))
			val = "1";
	}
	catch(Exception)
	{
	}
}

this.setProperty("val", val);
return this;
]]></method_code>
  <method_type>C#</method_type>
  <name>MSO_Project_Document_Numbering</name>
 </Item>
</AML>